@page "/tools"
@using GameManager.Models.ToolInfo

<div>
    <MudStack Row="true">
        <h1>@Resources.ToolsPage_Title</h1>
        <MudButton Color="Color.Default" Variant="Variant.Outlined"
                   ButtonType="ButtonType.Reset"
                   OnClick="OnOpenToolsFolderClick">
            @Resources.ToolsPage_OpenToolsFolder
        </MudButton>
    </MudStack>
    <MudDivider/>
    <MudStack>
        <h2>@Resources.ToolsPage_Builtin</h2>
        @foreach (BuiltinToolInfo builtinToolInfo in _BuiltinToolInfos)
        {
            <MudPaper Outlined="true" Class="d-flex flex-row pa-2">
                <MudText Typo="Typo.h6" Align="Align.Center">
                    @if (!string.IsNullOrWhiteSpace(builtinToolInfo.ToolVersion))
                    {
                        @(builtinToolInfo.ToolName + " Version " + builtinToolInfo.ToolVersion)
                    }
                    else
                    {
                        @builtinToolInfo.ToolName
                    }
                </MudText>
                <MudSpacer/>
                @if (Directory.Exists(Path.Combine(AppPathService.ToolsDirPath, builtinToolInfo.ToolName)))
                {
                    <MudButton OnClick="() => LaunchToolAsync(builtinToolInfo)">
                        <MudIcon Icon="@Icons.Material.Filled.ArrowRight" Style="@($"color:{Colors.Green.Default}")"></MudIcon>
                        Run
                    </MudButton>
                    <MudButton OnClick="() => RemoveTool(builtinToolInfo.ToolName)">
                        <MudIcon Icon="@Icons.Material.Filled.Close" Style="@($"color:{Colors.Red.Default}")"></MudIcon>
                        Remove
                    </MudButton>
                }
                else
                {
                    @if (builtinToolInfo.IsDownloading)
                    {
                        <MudProgressCircular Color="Color.Success" Value="@builtinToolInfo.Progress"/>
                        <MudButton OnClick="@(_ => { builtinToolInfo.CancellationTokenSource.Cancel(); })">
                            <MudIcon Icon="@Icons.Material.Filled.Close" Style="@($"color:{Colors.Green.Default}")"></MudIcon>
                            Cancel
                        </MudButton>
                    }
                    else
                    {
                        <MudButton OnClick="@builtinToolInfo.StartDownload">
                            <MudIcon Icon="@Icons.Material.Filled.Download" Style="@($"color:{Colors.Green.Default}")"></MudIcon>
                            Download
                        </MudButton>
                    }
                }
            </MudPaper>
        }
        <h2>@Resources.ToolsPage_Custom</h2>
        @if (CustomToolInfos != null)
        {
            @foreach (IToolInfo customToolInfo in CustomToolInfos)
            {
                <MudPaper Outlined="true" Class="d-flex flex-row pa-2">
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @if (!string.IsNullOrWhiteSpace(customToolInfo.ToolVersion))
                        {
                            @(customToolInfo.ToolName + " Version " + customToolInfo.ToolVersion)
                        }
                        else
                        {
                            @customToolInfo.ToolName
                        }
                    </MudText>
                    <MudSpacer/>
                    <MudButton OnClick="() => LaunchToolAsync(customToolInfo)">
                        <MudIcon Icon="@Icons.Material.Filled.ArrowRight" Style="@($"color:{Colors.Green.Default}")"></MudIcon>
                        Run
                    </MudButton>
                </MudPaper>
            }
        }
    </MudStack>
</div>