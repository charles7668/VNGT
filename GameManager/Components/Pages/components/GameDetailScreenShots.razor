<div id="game-detail-screenshots">
    <div class="tool-bar">
        <MudButton Class="game-detail-screenshots-btn"
                   Variant="Variant.Outlined"
                   OnClick="UpdateBackgroundImage">
            @Resources.DetailPage_Screenshots_SetToBackground
        </MudButton>
        <MudMenu AnchorOrigin="Origin.BottomLeft">
            <ActivatorContent>
                <MudButton Class="game-detail-screenshots-btn"
                           Variant="Variant.Outlined"
                           StartIcon="@Icons.Material.Filled.Add">
                    @Resources.Common_Add
                </MudButton>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem OnClick="OnAddScreenshotsByUrl">@Resources.DetailPage_Screenshots_AddFromUrl</MudMenuItem>
                <MudMenuItem OnClick="OnAddFromFile">@Resources.DetailPage_AddFromFile</MudMenuItem>
            </ChildContent>
        </MudMenu>
        <MudSpacer/>
        <MudTextField T="string" @bind-Value="_fetchSearchText" Placeholder="SearchText"></MudTextField>
        @if (!FetchTask.IsCompleted)
        {
            <MudButton Class="ml-2"
                       Color="Color.Primary"
                       Variant="Variant.Outlined">
                <MudProgressCircular Size="Size.Small" Color="Color.Success" Indeterminate="true"/>
            </MudButton>
        }
        else
        {
            <MudButton Class="game-detail-screenshots-btn"
                       Variant="Variant.Outlined"
                       StartIcon="@Icons.Material.Filled.Download"
                       OnClick="OnFetchButtonClick">
                @Resources.Common_Fetch
            </MudButton>
        }
        <MudSelect Label="Source"
                   Class="mx-2"
                   Variant="Variant.Outlined"
                   T="string"
                   @bind-Value="_fetchProvider"
                   Margin="Margin.Dense"
                   Immediate="true"
                   AnchorOrigin="Origin.BottomCenter">
            @foreach (string provider in GameInfoProviderFactory.SupportedProviders)
            {
                <MudSelectItem Value="provider"></MudSelectItem>
            }
        </MudSelect>
        <MudSpacer/>
        <MudButton Class="game-detail-screenshots-btn"
                   Variant="Variant.Outlined"
                   Color="Color.Error"
                   OnClick="OnRemoveScreenshotClick">
            @Resources.Common_Delete
        </MudButton>
    </div>
    @if (IsLoading)
    {
        <div class="progress-container">
            <div class="justify-center align-center d-flex">
                <MudProgressCircular Color="Color.Primary"
                                     Indeterminate="true">
                </MudProgressCircular>
            </div>
        </div>
    }
    else
    {
        <div class="image-list-container">
            @foreach (ScreenShotViewModel screenShot in GameInfoVo.ScreenShots)
            {
                <div class="@(GetImageContainerClass(screenShot))" onclick="@(() => OnImageClick(screenShot))">
                    <img src="@screenShot.Display" alt="can't load" onerror="this.style.backgroundColor='red';"/>
                </div>
            }
        </div>
    }
</div>